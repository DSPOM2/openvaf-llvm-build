version: 2.1
jobs:
  build_bin:
    docker:
      - image: cimg/rust:1.62.0
    resource_class: medium
    steps:
      - checkout # TODO shallow
      - run:
          name: install dependencies (clang)
          command: scripts/install_clang.sh && rustup target add x86_64-unknown-linux-musl
      - restore_cache:
          key: cargo-{{ checksum "Cargo.lock" }}
      - run:
          name: build ferris-ci
          command: llvm_postfix=-14 scripts/build_ferris_ci.sh
      - save_cache:
          key: cargo-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo/registry
            - ~/.cargo/git
      - persist_to_workspace:
          root: .
          paths:
            - ferris-ci
  build_image:
    parameters:
      image:
        type: string
      target:
        type: string
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout # TODO shallow
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: build
          command: |
            docker pull registry.access.redhat.com/ubi7/ubi-minimal 
            docker build --tag << parameters.image >>:latest -f containers/<< parameters.image >> .
            docker tag << parameters.image >>:latest ghcr.io/pascalkuthe/ferris_ci_<< parameters.target >>:latest
      - run:
          name: test
          command: |
            cd containers
            tar -cvf image_test.tar image_test/
            docker run -i << parameters.image >> bash -c 'tar -xvf - && cd image_test && cargo test --target << parameters.target >>' < image_test.tar
      - when:
          condition:
            equal: [ staging, << pipeline.git.branch >> ]
          name: deploy
          steps:
            - run: |
                echo $GITHUB_TOKEN | docker login ghcr.io -u pascalkuthe --password-stdin
                docker push ghcr.io/pascalkuthe/ferris_ci_<< parameters.target >>
  build_tools_image:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout # TODO shallow
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: build
          command: |
            docker build --tag ferris_ci_tools:latest -f containers/ferris_ci_tools .
            docker tag ferris_ci_tools:latest ghcr.io/pascalkuthe/ferris_ci_tools:latest
      - when:
          condition:
            equal: [ staging, << pipeline.git.branch >> ]
          name: deploy
          steps:
            - run: |
                echo $GITHUB_TOKEN | docker login ghcr.io -u pascalkuthe --password-stdin
                docker push ghcr.io/pascalkuthe/ferris_ci_tools
workflows:
  ci:
    when: 
      or:
        - equal: [ trying, << pipeline.git.branch >> ]
        - equal: [ staging, << pipeline.git.branch >> ]
    jobs:
      - build_bin:
          name: build ferris_ci binary
      - build_image:
          name: build ferris_ci image
          requires:
            - build ferris_ci binary
          image: ferris_ci
          target: x86_64-unknown-linux-gnu
          context: github
      - build_image:
          name: build ferris_ci_win image
          requires:
            - build ferris_ci binary
          image: ferris_ci_win
          target: x86_64-pc-windows-msvc
          context: github
      - build_tools_image:
          name: build ferris_ci_tools image
          requires:
            - build ferris_ci binary
          context: github
  
