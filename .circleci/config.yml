version: 2.1
jobs:
  build_bin:
    docker:
      - image: cimg/rust:1.62.0
    resource_class: medium
    steps:
      - checkout # TODO shallow
      - run:
          name: install dependencies (clang)
          command: scripts/install_clang.sh && rustup target add x86_64-unknown-linux-musl
      - restore_cache:
          key: cargo-{{ checksum "Cargo.lock" }}
      - run:
          name: build ferris-ci
          command: llvm_postfix=-14 scripts/build_ferris_ci.sh
      - save_cache:
          key: cargo-{{ checksum "Cargo.lock" }}
          paths:
            - ~/.cargo/registry
            - ~/.cargo/git
      - persist_to_workspace:
          root: .
          paths:
            - ferris-ci
  build_image:
    parameters:
      image:
        type: string
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout # TODO shallow
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run: |
          ssh remote-docker \<< EOF
            sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
            sudo systemctl restart docker
          EOF
      - run:
          name: build
          command: |
            docker build --tag ghcr.io/pascalkuthe/<< parameters.image >> -f containers/<< parameters.image >> --squash .

      - when:
          condition:
              equal: [ staging, << pipeline.git.branch >> ]
          steps:
            - run:
                name: deploy
                command: |
                  echo $GITHUB_TOKEN | docker login ghcr.io -u pascalkuthe --password-stdin
                  docker push ghcr.io/pascalkuthe/<< parameters.image >>
  build_squashed_image:
    parameters:
      image:
        type: string
    docker:
      - image: cimg/python:3.10
    resource_class: small
    steps:
      - checkout # TODO shallow
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: build
          command: |
            docker build --tag ghcr.io/pascalkuthe/<< parameters.image >> -f containers/<< parameters.image >> .

      - run:
          name: squash
          command: |
            pip install docker==5.0.3
            pip install docker-squash
            docker-squash ghcr.io/pascalkuthe/<< parameters.image >>
      - when:
          condition:
              equal: [ staging, << pipeline.git.branch >> ]
          steps:
            - run:
                name: deploy
                command: |
                  echo $GITHUB_TOKEN | docker login ghcr.io -u pascalkuthe --password-stdin
                  docker push ghcr.io/pascalkuthe/<< parameters.image >>

workflows:
  ci:
    when: 
      or:
        - equal: [ trying, << pipeline.git.branch >> ]
        - equal: [ staging, << pipeline.git.branch >> ]
    jobs:
      - build_bin:
          name: build ferris_ci binary

      - build_image:
          requires:
            - build ferris_ci binary
          context: github
          matrix:
            parameters:
              image: 
              - ferris_ci_clippy
              - ferris_ci_fmt
              - ferris_ci_dep
              - ferris_ci_vendor
              - ferris_ci_test_runner_x86_64-pc-windows-msvc
              - ferris_ci_test_runner_x86_64-unknown-linux-gnu 

      - build_squashed_image:
          requires:
            - build ferris_ci binary
          context: github
          matrix:
            parameters:
              image: 
              - ferris_ci_build_x86_64-pc-windows-msvc
              - ferris_ci_build_x86_64-unknown-linux-gnu 
